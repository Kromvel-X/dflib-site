== Shaping the DataFrame

There are various ways to reshape a DataFrame by adding / removing rows and columns.

=== Adding Columns

There are a few ways to add columns to a DataFrame:

* Add a column by calculating cell values, based on data from other columns:

[source,java,indent=0]
----
include::../../../test/java/com/nhl/dflib/docs/ShapingExample.java[tags=addColumnFromRow]
----

<1> New column name
<2> Operation to produce values for the new column from the existing row. `r` is a special `RowProxy` object,
providing access to the row being processed.

----
first   last      full
------- --------- -----------------
Jerry   Cosin     Jerry Cosin
Alanson Gabrielly Alanson Gabrielly
Joan    O'Hara    Joan O'Hara
3 rows x 3 columns
----

* Add multiple columns in a single method call (generally faster than adding them individually) :

[source,java,indent=0]
----
include::../../../test/java/com/nhl/dflib/docs/ShapingExample.java[tags=addColumnsFromRow]
----

----
first   last      last_initial first_initial
------- --------- ------------ -------------
Jerry   Cosin     C            J
Alanson Gabrielly G            A
Joan    O'Hara    O            J
3 rows x 4 columns
----

* Adding a Series. If you already have a Series object of the size matching the DataFrame height, it can be added as a
column. E.g. we can add a column that will number DataFrame rows:

[source,java,indent=0]
----
include::../../../test/java/com/nhl/dflib/docs/ShapingExample.java[tags=addColumnFromSeries]
----
<1> A `Series` that produces a sequence of numbers from `0` to `df.height()`.
----
first   last      number
------- --------- ------
Jerry   Cosin          0
Alanson Gabrielly      1
Joan    O'Hara         2
3 rows x 3 columns
----

For this particular task (adding row numbers) there's a shortcut that does the same thing as the code above:

[source,java,indent=0]
----
include::../../../test/java/com/nhl/dflib/docs/ShapingExample.java[tags=addRowNumbers]
----

=== Deleting Columns

[source,java,indent=0]
----
include::../../../test/java/com/nhl/dflib/docs/ShapingExample.java[tags=deleteColumns]
----
<1> Drop one or more columns from the DataFrame.
----
last
---------
Cosin
Gabrielly
O'Hara
3 rows x 1 column
----

=== Renaming Columns

Often DataFrames come from external sources (like CSV files or database tables) with column names, that require further
cleanup to clarify their meaning within the application. There are a number of ways to rename the columns:

* Rename columns individually:

[source,java,indent=0]
----
include::../../../test/java/com/nhl/dflib/docs/ShapingExample.java[tags=renameColumn]
----

----
first_name last_name
---------- ---------
Jerry      Cosin
Joan       O'Hara
2 rows x 2 columns
----

* Specify the new names of _all_ columns at once. This may not be practical for a large number of columns:

[source,java,indent=0]
----
include::../../../test/java/com/nhl/dflib/docs/ShapingExample.java[tags=renameColumns]
----

----
first_name last_name
---------- ---------
Jerry      Cosin
Joan       O'Hara
2 rows x 2 columns
----

* Rename using a map of old names to new names. Names not present in the map will remain unchanged:

[source,java,indent=0]
----
include::../../../test/java/com/nhl/dflib/docs/ShapingExample.java[tags=renameColumns_Map]
----

----
first_name last
---------- ------
Jerry      Cosin
Joan       O'Hara
2 rows x 2 columns
----

* Rename using a function, applied to all column names in turn. This is useful e.g. to convert all names to lower case:

[source,java,indent=0]
----
include::../../../test/java/com/nhl/dflib/docs/ShapingExample.java[tags=renameColumns_ToLowerCase]
----

----
first last
----- ------
Jerry Cosin
Joan  O'Hara
2 rows x 2 columns
----

