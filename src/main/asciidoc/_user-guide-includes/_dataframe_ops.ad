[#dataframe_ops]
== DataFrame Operations

As we've seen above, most operations within a single DataFrame are performed on row and column sets. Still there are
a few that are applied to the DataFrame directly. In this chapter we will review some of them.

=== Compacting Columns

This transformation converts columns to primitives. The values in the columns to be converted can be either Numbers or
Strings:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/docs/DataFrameOpsTest.java[tags=compact]
----

<1> The second method argument is the primitive value to use if the value being converted is null

NOTE: `compactInt(..)`, `compactDouble(..)` and other similar methods are not just syntactic sugar. They convert
DataFrame columns to primitive Series, that take _significantly_ less memory (hence, the name "compact") and compute
most operations faster than Object-based Series. So you should consider using them where possible.

=== Head and Tail

When you only need the "first N" or "last M" rows of a DataFrame (or values of a Series) you can use `head` and `tail`
operations. Here is how to get the top 2 rows of a DataFrame:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/docs/DataFrameOpsTest.java[tags=headDataFrame]
----

<1> Returns a new DataFrame with two top rows of the original DataFrame.

----
first   last
------- ---------
Jerry   Cosin
Juliana Walewski
2 rows x 2 columns
----

`tail` works similarly, but returns the _last_ N rows:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/docs/DataFrameOpsTest.java[tags=tailDataFrame]
----

----
first last
----- ------
Joan  O'Hara
1 row x 2 columns
----

The argument to either `head(..)` or `tail(..)` can be negative.
In which case the operation skips the specified number of elements either from the top or from the bottom, and returns the remaining elements.
The following code returns a new DataFrame after skipping the two top rows of the original DataFrame:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/docs/DataFrameOpsTest.java[tags=negativeHeadDataFrame]
----

----
first  last
------ ---------
Joan  O'Hara
1 row x 2 columns
----

`Series` also define `head(..)` and `tail(..)` operations that do what you'd expect from them, returning first or last N values.

NOTE: Unlike index operations on arrays and lists in Java, `head(..)` and `tail(..)` are safe in regards to bounds checking.
They DO NOT throw exceptions when the length parameter is bigger than DataFrame height (or Series size), returning an empty DataFame (or Series) instead.



