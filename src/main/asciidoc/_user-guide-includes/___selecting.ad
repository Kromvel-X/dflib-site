=== Selecting Rows by Position

* Selecting a subset of rows by position.
As there are no row labels in DFLib yet, selecting by position is the only "direct" selection option.
Just like with column selection, it allows to duplicate rows by referencing the same position more than once, as well as reorder rows:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/docs/SelectingTest.java[tags=selectRows]
----

----
first last
----- ------
Joan  O'Hara
Jerry Cosin
Jerry Cosin
3 rows x 2 columns
----

[#selectRowsIndex]
* Selecting using an index.
You may precalulate an "index" (an `IntSeries`) of row positions and then use it for row selection.
An index often comes from applying a condition to a `Series` that is not a part of the `DataFrame`.
E.g.:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/docs/SelectingTest.java[tags=selectRowsIndex]
----

<1> Index is calculated by applying a condition to a Series, that is not a part of the DataFrame, whose rows we are selecting.

----
first last
----- -----
Jerry Cosin
1 row x 2 columns
----

=== Selecting Rows by Condition

Most often than not we don't know specific positions of rows we would like to select, and instead would like to evaluate each row against some condition to decide whether it should be included in the result:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/docs/SelectingTest.java[tags=selectByCondition]
----

----
first last
----- ------
Joan  O'Hara
1 row x 2 columns
----

NOTE: Unlike positional select this flavor does not allow to reorder or duplicate rows.

In the example above select condition was provided using the `Condition` object.
You can also use a lambda function on a single column:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/docs/SelectingTest.java[tags=filterByColumn]
----

Or a lambda function on the entire row:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/docs/SelectingTest.java[tags=filterByRow]
----

Finally, `BooleanSeries` can also serve as a filter condition (a "mask").
Such mask is usually a result of a prior logical operation between Series.
E.g.:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/docs/SelectingTest.java[tags=filterByBoolean]
----

<1> Mask is calculated by comparing a Series of names with DataFrame column of first names.

----
first last
----- ------
Joan  O'Hara
1 row x 2 columns
----

