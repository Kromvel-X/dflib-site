[#bin_data_sources]
== Binary Data Sources

There are two interfaces that allow format-specific DFLib loaders to access streams of bytes and produce `DataFrame`
instances. Those are `ByteSource`, a single resource accessible as a stream of bytes and `ByteSources`, a collection
of such resources. Most loaders accept `ByteSource` (and sometimes, `ByteSources`) as an argument to their `load(..)`
method. E.g. loaders for CSV, Avro, Parquet, JSON support both `ByteSource` and `ByteSources`, Excel loader supports
`ByteSource`, and JDBC loader supports neither (because JDBC doesn't expose ResultSets as byte streams).

DFLib provides a growing number of `ByteSource` implementations out-of-the-box, as described below. And you can
implement your own if needed.

NOTE: `ByteSources` doesn't have any interesting implementations as of DFlib `1.x`, but in the future releases there will
be sources for ZIP archives, cloud folders, and such.

=== byte[] ByteSource

The simplest ByteSource is a wrapper around a `byte[]`:



=== URL ByteSource



=== HTTP ByteSource