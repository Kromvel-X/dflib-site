== Notebooks and Version Control

NOTE: This is a general version control hint for Jupyter notebooks, not specific to Java.

Jupyter places data generated
by the notebook in the notebook itself. Sometimes this is the desired behavior (e.g. when you want to share the notebook
results with your audience via GitHub), but very often this is just a nuisance. Assuming you are using Git, you may
automatically strip off the data before each commit by using Git hooks. Here is one possible recipe:

. Add a script for stripping off outputs and execution counts somewhere in your repo. In our example it will be in
`bin/clean_ipynb.py`:
+
[source,python,indent=0]
----
#!/usr/bin/env python3
import sys
import json

nb = sys.stdin.read()
json_in = json.loads(nb)

def strip_output_from_cell(cell):
    if "outputs" in cell:
        cell["outputs"] = []
    if "execution_count" in cell:
        cell["execution_count"] = None

for cell in json_in["cells"]:
    strip_output_from_cell(cell)

json.dump(json_in, sys.stdout, sort_keys=True, indent=1, separators=(",",": "))
----

. Create `.gitconfig` file in the root of your repo:
+
----
[filter "clean_ipynb"]
	smudge = cat
	clean = bin/bin/clean_ipynb.py
----

. Create `.gitattributes` file in the root of your repo, referencing the filter from `.gitconfig`:
+
----
*.ipynb  filter=clean_ipynb
----

. All the files above should be version-controlled. Every time a user clones the repo, they will need to execute the
following command manually to enable the above configuration:
+
----
git config --local include.path ../.gitconfig
----